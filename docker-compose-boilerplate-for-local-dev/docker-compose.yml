version: '3'

services:

  nginx: 
    container_name: nginx
    build: ./nginx
    restart: unless-stopped
    volumes:
      # configure server
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/log/:/var/log/nginx/
      # configure server blocks
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      # - /etc/letsencrypt/:/etc/letsencrypt/
    ports:
      - 8000:80
    # networks:
      # - frontnet

  nodejs-app2:
    container_name: nodejs-app2
    build: ./app2
    restart: unless-stopped
    volumes:
      # the part `:/opt/app2/` should always match the WORKDIR path mentioned in ./app2/Dockerfile 
      - ./app2/:/opt/app2/
    #depends_on:
      # - nodejs-app1
    # ports:
      # node.js process is listening for a debugging client (e.g. vscode debugger) on
      # - 9229:9229
    expose:
      # app is listening on
      - 3002
    
  nodejs-app1:
    container_name: nodejs-app1
    build: ./app1
    restart: unless-stopped
    volumes:
      # the part `:/opt/app1/` should always match the WORKDIR path mentioned in ./app1/Dockerfile 
      - ./app1/:/opt/app1/
    env_file:
      - ./nodejs-app1.env
    ports:
      # node.js process is listening for a debugging client (e.g. vscode 
      # debugger) on
      - 9229:9229
    expose:
      # Expose ports without publishing them to the host machine - theyâ€™ll only
      # be accessible to linked services. Only the internal port can be 
      # specified
      - 3001

  postgres-db:
    container_name: postgres-db
    image: postgres
    restart: always
    env_file:
      - ./postgres-db.env
    ports:
      - 54320:5432
    volumes:
      - ./postgres-db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres-db/volume/:/var/lib/postgresql/data

  redis:
    container_name: 'redis'
    image: redis
    volumes:
      - ./redis_data/:/opt/redis_data
    ports:
      - '6379:6379'
    
  php-app:
    container_name: php-app
    image: php:apache
    volumes:
      - ./php-app/:/var/www/html/
    ports:
      - 8001:80
      
networks:
  frontnet:
    driver: bridge
